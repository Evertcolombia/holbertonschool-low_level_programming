#include "hash_tables.h"

int hash_table_set(hash_table_t *ht, const char *key, const char *value)
{
	unsigned long int index;
	hash_node_t *new_node = NULL;

	if (ht == NULL)
		return(0);

	if (key == NULL || key == "")
		return(0);

	if (value == NULL)
		return (0);

	index =  key_index((unsigned char *)key, ht->size);

	new_node = malloc(sizeof(hash_node_t));
	if (new_node == NULL)
		return(0);
	new_node->key = strdup(key); 
        new_node->value = strdup(value);
		
	if (ht->array[index] == 0)
	{
		new_node->next = ht->array[index];
		ht->arra[index] = new_node;
		return (1); /*falta algo en return*/
	}
	else
	{
		ht->array[index]->next = NULL;
		new_node->next = ht->array[index];
		ht->array[index] = new_node;
		return (1);
	}
}
